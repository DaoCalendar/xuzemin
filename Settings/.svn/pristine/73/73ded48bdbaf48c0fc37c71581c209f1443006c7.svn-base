package com.ctv.settings.device.viewHolder;

import android.app.Activity;
import android.content.Intent;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;


import android.widget.RelativeLayout;
import android.widget.SeekBar;
import com.ctv.settings.base.BaseViewHolder;
import com.ctv.settings.device.DeviceActivity;
import com.ctv.settings.device.DeviceManager;
import com.ctv.settings.device.ThemeBgActvity;
import com.ctv.settings.security.R;
import com.ctv.settings.utils.L;


/**
 * 设置ViewHolder
 *
 * @author wanghang
 * @date 2019/09/17
 */
public class DeviceViewHolder extends BaseViewHolder implements View.OnClickListener, SeekBar.OnSeekBarChangeListener {
    private final static String TAG = DeviceViewHolder.class.getCanonicalName();

    private View mainSecurity; // 安全模块根界面
    private View itemAppPermissions; // 安全模块根界面
    private View itemUnknownStore; // 安全模块根界面
    private View itemCameraPermissions; // 安全模块根界面
    private View itemUdiskPermissions; // 安全模块根界面

    private ImageView imAppPermissions; // app权限
    private ImageView imUnknownStore; // 位置来源开关
    private ImageView imUdiskPermissions; // U盘权限
    private ImageView imCameraPermissions; // 摄像头权限
    private SeekBar pup_seekbar, pup_volume_seekbar;
    private RelativeLayout itemTheme, itemThemeStyle, itemDeviceName;


    public DeviceViewHolder(Activity activity) {
        super(activity);
    }

    /**
     * 初始化UI
     *
     * @param activity
     */
    @Override
    public void initUI(Activity activity) {
        pup_seekbar = activity.findViewById(R.id.pup_seekbar1);//亮度
        pup_volume_seekbar = activity.findViewById(R.id.pup_seekbar_volume);//声音
        itemTheme = activity.findViewById(R.id.rl_setting_theme); //主题背景
        itemThemeStyle = activity.findViewById(R.id.rl_setting_theme_sytle); //主题风格
        itemDeviceName = activity.findViewById(R.id.rl_setting_device_name);
    }

    /**
     * 初始化数据
     *
     * @param activity
     */
    @Override
    public void initData(Activity activity) {
        Log.d(TAG, "initData");
        pup_seekbar.setMax(100);
        pup_seekbar.setProgress(DeviceManager.getScreenBrightness(activity));//
        pup_volume_seekbar.setMax(DeviceManager.getMaxVolume(activity));
        pup_volume_seekbar.setProgress(DeviceManager.getVolume(activity));

    }

    /**
     * 初始化监听
     */
    @Override
    public void initListener() {
        Log.d(TAG, "initListener");
        pup_seekbar.setOnSeekBarChangeListener(this);
        pup_volume_seekbar.setOnSeekBarChangeListener(this);
        itemTheme.setOnClickListener(this);
        itemThemeStyle.setOnClickListener(this);
        itemDeviceName.setOnClickListener(this);
    }

    /**
     * 刷新指定view
     *
     * @param view
     */
    @Override
    public void refreshUI(View view) {
    }

    @Override
    public void onClick(View view) {
        int id = view.getId();
        L.d(TAG, "mOnClickListener view.id->%s", id);
        switch (id) {
            case R.id.rl_setting_theme:
                L.d("qkmin-----点击主题设置");
                startActivityUtils(ThemeBgActvity.class);
                break;
            case R.id.rl_setting_theme_sytle:
                startActivityUtils(DeviceActivity.class);
                break;
            case R.id.rl_setting_device_name:
                startActivityUtils(DeviceActivity.class);

                break;
        }
    }

    @Override
    public void onProgressChanged(SeekBar seekBar, int progress, boolean b) {
        if (seekBar == pup_seekbar) { //亮度
            L.d("qkmin-设置亮度:" + progress);
            pup_seekbar.setProgress(progress);
            DeviceManager.setBrightness(mActivity, progress);
        } else if (seekBar == pup_volume_seekbar) { //声音
            DeviceManager.setVolume(mActivity, progress);
        }
    }

    @Override
    public void onStartTrackingTouch(SeekBar seekBar) {

    }

    @Override
    public void onStopTrackingTouch(SeekBar seekBar) {

    }

    public void startActivityUtils(Class aClass) {
        Intent intent = new Intent(mActivity, aClass);
        mActivity.startActivity(intent);
    }
}
