package com.ctv.settings.security;

import android.app.Activity;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;

import java.lang.ref.WeakReference;

/**
 * 安全模块
 * @author wanghang
 * @date 2019/09/17
 */
public class SecurityActivity extends AppCompatActivity {
    private final static String TAG = "SecurityLib";
    private SecurityViewHolder mSecurityViewHolder;

    public static Handler mHandler = null;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_security);

        Log.d(TAG, "SecurityActivity onCreate");
        mHandler = new UIHandler(this);
        // 初始化viewHolder
        mSecurityViewHolder = new SecurityViewHolder(this, mHandler);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        mSecurityViewHolder.onDestroy();
    }

    /**
     * UI异步处理
     */
    public static final class UIHandler extends Handler {
        WeakReference<Activity> weakReference;

        public UIHandler(Activity activity) {
            super();
            this.weakReference = new WeakReference<>(activity);
        }

        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);

            Activity activity = weakReference.get();
            if (activity == null || activity.isFinishing()){
                return;
            }

            switch (msg.what){
//                case MSG_UPDATE_LIGHT:{ // 自动更新背光
//                    if ((msg.obj != null)
//                            && (msg.obj instanceof  Boolean)){
//                        boolean flag = (boolean)msg.obj;
//                        activity.updateBlackLightSeekbar(flag);
//                    } else {
//                        activity.updateBlackLightSeekbar();
//                    }
//                    break;
//                }
//                case MSG_UPDATE_MUTE:{ // 自动更新静音图标
//                    activity.updateMuteIU();
//                    break;
//                }
//                case MSG_UPDATE_FINISH:{ // 停止
//                    activity.finish();
//                    break;
//                }
//                case MSG_UI_HIDE:{ // 判断有UI操作
////		            Log.d(TAG, "判断有UI操作");
////		            removeCallbacks(activity.hideRunnable);
////		            postDelayed(activity.hideRunnable, 5000);
//                    break;
//                }
                default:
                    break;
            }
        }
    }
}
