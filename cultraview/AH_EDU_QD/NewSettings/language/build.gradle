// module和lib控制
if (isModule) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion versions.compileSdkVersion
    buildToolsVersion versions.buildToolsVersion

    defaultConfig {
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName "1.0"

        if (isModule) {
            applicationId appIds.language
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            java.srcDirs "src/main/java"
            java.srcDirs += 'src/main/kotlin'
            jniLibs.srcDirs = ['libs']
            res.srcDirs "src/main/res"

            if (isModule) {// module app形式
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else { // lib形式
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

//    repositories {
//        flatDir {
//            dirs 'libs'
//        }
//    }
//
//    lintOptions {
//        abortOnError false
//        checkReleaseBuilds false
//    }

}

dependencies {
    compileOnly files('libs/fr.jar') // framework.jar

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation "com.android.support:appcompat-v7:${versions.support}"

    implementation "com.android.support.constraint:constraint-layout:${versions.constraint}"
    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "com.android.support.test:runner:${versions.runner}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${versions.espresso}"

    api project(path: ':libCommon')
    implementation project(path: ':resCommon')
}

preBuild {
    doLast {
        def imlFile = file(project.name + ".iml")
        println 'Change ' + project.name + '.iml order'
        try {
            def parsedXml = (new XmlParser()).parse(imlFile)
            def jdkNode = parsedXml.component[1].orderEntry.find { it.'@type' == 'jdk' }
            parsedXml.component[1].remove(jdkNode)
            def sdkString = "Android API " + android.compileSdkVersion.substring("android-".length()) + " Platform"
            new Node(parsedXml.component[1], 'orderEntry', ['type': 'jdk', 'jdkName': sdkString, 'jdkType': 'Android SDK'])
            groovy.xml.XmlUtil.serialize(parsedXml, new FileOutputStream(imlFile))
        } catch (FileNotFoundException e) {
            // nop, iml not found
        }
    }
}
