apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        // Enabling multidex support.
//        multiDexEnabled true
    }

    //以下是为了找到android.os.SystemProperties这个隐藏的类
    String SDK_DIR = System.getenv("ANDROID_SDK_HOME")
    //("TAG", "SDK_DIR = " + SDK_DIR );
    if(SDK_DIR == null) {
        Properties props = new Properties()
        props.load(new FileInputStream(project.rootProject.file("local.properties")))
        SDK_DIR = props.get('sdk.dir')
    }
    dependencies {
        provided files("${SDK_DIR}/platforms/android-21/data/layoutlib.jar")
    }

    //配置keystore签名
    signingConfigs {
        debugConfig {
            storeFile file(rootProject.ext.storeFile)
            storePassword rootProject.ext.storePassword
            keyAlias rootProject.ext.keyAlias
            keyPassword rootProject.ext.keyPassword
        }

        releaseConfig {
            storeFile file(rootProject.ext.storeFile)
            storePassword rootProject.ext.storePassword
            keyAlias rootProject.ext.keyAlias
            keyPassword rootProject.ext.keyPassword
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName

            if(variant.buildType.name=="release"){
                fileName = "VirtualKey_release.apk"
            } else {
                fileName = "VirtualKey_debug.apk"
            }

            outputFileName = fileName
        }
    }

    buildTypes {
        debug {
            debuggable true
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix ""//"-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debugConfig
        }


    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    retrolambda {
        javaVersion JavaVersion.VERSION_1_7
    }


    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    dexOptions {
        preDexLibraries = false
        maxProcessCount 4
        javaMaxHeapSize "1g"
    }


}

dependencies {
    compileOnly files('libs/fr.jar')
    //    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:design:24.2.1'
    implementation 'com.android.support:appcompat-v7:24.2.1'
    implementation 'com.android.support:support-v4:24.2.1'
    implementation project(':whiteboardlib')
    implementation 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    implementation 'com.zhy:base-rvadapter:3.0.3'
    implementation 'com.zhy:base-adapter:3.0.3'
    implementation 'com.apkfuns.logutils:library:1.4.2.2'
    implementation 'com.squareup.okhttp3:okhttp:3.4.1'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation files('libs/hhtapi.jar')
}
